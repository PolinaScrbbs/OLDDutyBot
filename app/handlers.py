from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

import app.keyboards as kb
import app.states as st
import app.api.response as api_res
import app.database.response as db_res

router = Router()

#–°—Ç–∞—Ä—Ç
@router.message(CommandStart())
async def cmd_start(message:Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name} {message.from_user.last_name}\n–í—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—éüí§üí§üí§',
                        reply_markup=kb.start)


#–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è============================================================================================================


@router.message(lambda message: message.text == "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
async def get_login(message: Message, state: FSMContext):
    await state.set_state(st.Auth.login) #–ü–æ–º–µ–Ω—è–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –ª–æ–≥–∏–Ω–∞
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω', reply_markup=kb.cancel)

@router.message(st.Auth.login)
async def get_password(message: Message, state: FSMContext):
    await state.update_data(login=message.text) #–°–æ—Ö—Ä–∞–Ω–∏–ª–∏ –ª–æ–≥–∏–Ω
    await state.set_state(st.Auth.password) #–ü–æ–º–µ–Ω—è–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å', reply_markup=kb.cancel)

@router.message(st.Auth.password)
async def reg(message: Message, state: FSMContext):
    await state.update_data(password=message.text) #–°–æ—Ö—Ä–∞–Ω–∏–ª–∏ –ø–∞—Ä–æ–ª—å
    data = await state.get_data() #–ü–æ–ª—É—á–∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    token, error = api_res.authorization(data['login'], data['password'])
    if error:
        await message.answer(error)
        await message.answer('–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω', reply_markup=kb.cancel)
        await state.set_state(st.Auth.login) #–ü–æ–º–µ–Ω—è–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –ª–æ–≥–∏–Ω–∞
    else:
        await db_res.save_token(message.from_user.id, token)
        await message.answer(f'{message.from_user.first_name}, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞')
        await state.clear() #–û—á–∏—â–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π

@router.callback_query(F.data == 'cancel')
async def catalog(callback:CallbackQuery, state: FSMContext):
    await state.clear() #–û—á–∏—â–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π
    await callback.message.edit_text('‚úÖ–û—Ç–º–µ–Ω–µ–Ω–æ')


@router.message(Command('help'))
async def get_help(message:Message):
    await message.answer('–≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ /help')


@router.message(F.text == '–ö–∞–∫ –¥–µ–ª–∞?')
async def how_are_you(message:Message):
    await message.answer('–•–æ—Ä–æ—à–æ')


@router.message(F.photo)
async def get_photo_id(message:Message):
    await message.answer(f'ID —Ñ–æ—Ç–æ: {message.photo[-1].file_id}')


@router.message(Command('get_photo'))
async def get_photo(message:Message):
    await message.answer_photo(photo='AgACAgIAAxkBAAPAZiEzU-ZmNo4lPSA3lOUxV3IQsGkAAtXXMRsUXwhJWuZtoLaC9hcBAAMCAAN5AAM0BA',
                        caption='–í–∞—à–µ —Ñ–æ—Ç–æ')
    
@router.callback_query(F.data == 'catalog')
async def catalog(callback:CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–∞–ª–æ–≥', show_alert=True) #show_alert=True –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ü–µ–ª–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.edit_text('–ö–∞—Ç–∞–ª–æ–≥', reply_markup=await kb.inline_links()) #–ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –Ω–æ–≤—ã–µ
